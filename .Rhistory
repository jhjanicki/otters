install.packages('mapview','ggpmisc')
updateR()
devtools::install_github("GlobalFishingWatch/fishwatchr")
update.packages()
library(fishwatchr)
devtools::install_github("GlobalFishingWatch/fishwatchr")
library(ggplot2)
library(fishwatchr)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(DBI)
library(bigrquery)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "global-fishing-watch.global_footprint_of_fisheries.fishing_effort", use_legacy_sql = FALSE)
con
BQ_connection <-  dbConnect(bigquery(),
project = 'global-fishing-watch',
dataset = "global_footprint_of_fisheries",
billing = "ng-gfw", # your billing account name
use_legacy_sql = FALSE) # specify we are using Standard SQL
BQ_connection
DBI::dbListTables(BQ_connection)
DBI::dbListTables(con)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", billing = "ng-gfw",use_legacy_sql = FALSE)
con
DBI::dbListTables(con)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(tidyverse) #loads dplyr and friends
fishing_vessels <- dplyr::tbl(BQ_connection,
"fishing_vessels") # connects to a table
fishing_vessels
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", billing = "ng-gfw",use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(fishwatchr)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(DBI)
library(bigrquery)
BQ_connection <-  dbConnect(bigquery(),
project = 'global-fishing-watch',
dataset = "global_footprint_of_fisheries",
billing = "ng-gfw", # your billing account name
use_legacy_sql = FALSE) # specify we are using Standard SQL
DBI::dbListTables(BQ_connection)
library(fishwatchr)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
plot(cars)
library(bigrquery)
library(fishwatchr)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(bigrquery)
library(fishwatchr)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(fishwatchr)
library(bigrquery)
# Establish connection to BigQuery project
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
effort <- get_effort(start_date = "2018-01-01",
end_date = "2018-01-01",
by = "year",
con = con)
library(fishwatchr)
library(bigrquery)
library(fishwatchr)
# Other useful packages
library(tidyverse)
library(glue)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort_query <- glue::glue(
"
SELECT
EXTRACT(year from _partitiontime) as year,
floor(lat_bin / 100) lat_bin,
floor(lon_bin / 100) lon_bin,
SUM(fishing_hours) fishing_hours
FROM  `gfw_draft_data.fishing_effort_v20190227`
WHERE EXTRACT(year FROM _partitiontime) = 2018
AND fishing_hours > 0
GROUP BY 1,2,3
"
)
effort_query
effort_df <- gfw_query(query = effort_query, run_query = TRUE, con = con)
library(bigrquery)
# Load fishwatchr
library(fishwatchr)
# Other useful packages
library(tidyverse)
library(glue)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort_query <- glue::glue(
"
SELECT
EXTRACT(year from _partitiontime) as year,
floor(lat_bin / 100) lat_bin,
floor(lon_bin / 100) lon_bin,
SUM(fishing_hours) fishing_hours
FROM  `gfw_draft_data.fishing_effort_v20190227`
WHERE EXTRACT(year FROM _partitiontime) = 2018
AND fishing_hours > 0
GROUP BY 1,2,3
"
)
effort_query
effort_df <- gfw_query(query = effort_query, run_query = TRUE, con = con)
effort_df <- gfw_query(query = effort_query, run_query = TRUE, con = con)
library(bigrquery)
library(tidyverse)
library(glue)
con <- DBI::dbConnect(drv = bigrquery::bigquery(), project = "world-fishing-827", use_legacy_sql = FALSE)
effort_query <- glue::glue(
"
SELECT
EXTRACT(year from _partitiontime) as year,
floor(lat_bin / 100) lat_bin,
floor(lon_bin / 100) lon_bin,
SUM(fishing_hours) fishing_hours
FROM  `gfw_draft_data.fishing_effort_v20190227`
WHERE EXTRACT(year FROM _partitiontime) = 2018
AND fishing_hours > 0
GROUP BY 1,2,3
"
)
effort_df <- gfw_query(query = effort_query, run_query = TRUE, con = con)
gfw_query(query = effort_query,
run_query = TRUE,
save_query = T,
destination_dataset = 'scratch_tyler',
destination_table = 'gfw_query_test',
con = con)
effort_query
effort_df <- fishwatchr.gfw_query(query = effort_query, run_query = TRUE, con = con)
gfw_query
effort_df <- fishwatchr::gfw_query(query = effort_query, run_query = TRUE, con = con)
fishwatchr::gfw_query(query = effort_query,
run_query = TRUE,
save_query = T,
destination_dataset = 'scratch_tyler',
destination_table = 'gfw_query_test',
con = con)
gfw_map(theme = 'dark')
fishwatchr::gfw_map(theme = 'dark')
library(rnaturalearth)
install.packages('rnaturalearth')
fishwatchr::gfw_map(theme = 'dark')
fishwatchr::gfw_map(theme = 'light', eezs = TRUE)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_course("The R Programming Environment")
swirl()
5+7
x <-5+7
x
y -> x-3
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
quit()
ext_tracks_file <- paste0("http://rammb.cira.colostate.edu/research/",
"tropical_cyclones/tc_extended_best_track_dataset/",
"data/ebtrk_atlc_1988_2015.txt")
ext_tracks_file
ext_tracks_widths <- c(7, 10, 2, 2, 3, 5, 5, 6, 4, 5, 4, 4, 5, 3, 4, 3, 3, 3,
4, 3, 3, 3, 4, 3, 3, 3, 2, 6, 1)
ext_tracks_colnames <- c("storm_id", "storm_name", "month", "day",
"hour", "year", "latitude", "longitude",
"max_wind", "min_pressure", "rad_max_wind",
"eye_diameter", "pressure_1", "pressure_2",
paste("radius_34", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_50", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_64", c("ne", "se", "sw", "nw"), sep = "_"),
"storm_type", "distance_to_land", "final")
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks_file
library(readr)
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks
ext_tracks$radius_34_ne
katrina <- ext_tracks %>% filter(storm_name == "KATRINA") %>% select(month, day, hour, max_wind)
library(tidyverse)
katrina <- ext_tracks %>% filter(storm_name == "KATRINA") %>% select(month, day, hour, max_wind)
katrina
katrina <- ext_tracks %>% filter(storm_name == "KATRINA") %>% select(month, day, hour, max_wind) %>% head(3)
katrina
worst <- ext_tracks %>% summarize(n_observations = n(), worst_wind = max(max_wind), worst_pressure = min(min_pressure))
worst
knots_to_mph <- function(knots){mph <- 1.152*knots}
worst2 <- ext_tracks %>% summarize(n_observations = n(), worst_wind_mph = max(knots_to_mph(max_wind)), worst_pressure = min(min_pressure))
worst2
storms_by_year <- ext_tracks %>% group_by(storm_name,year) %>% summarize(n_observations = n(), worst_wind_mph = max(knots_to_mph(max_wind)), worst_pressure = min(min_pressure))
storms_by_year
library(ggplot2)
storms_by_year %>% ggplot(aes(x = worst_wind_mph)) + geom_histogram()
ext_tracks %>% select(storm_name, starts_with('radius_34'))
ext_tracks %>% select(storm_name, contains('34'))
ext_tracks %>% select(storm_name, matches("_[0-9][0-9]_"))
ext_tracks %>% filter(storm_name %in% c("KATRINA"))
ext_tracks %>% filter(!(storm_name %in% c("KATRINA"))
ext_tracks %>% filter(!(storm_name %in% c("KATRINA")))
storms_by_year %>% filter(worst_wind_mph > 180)
ext_tracks %>% filter(max_wind>150 & year > 2000)
library(faraway)
install.packages(faraway)
install.packages("faraway")
library(faraway)
data(worldcup)
worldcup
worldcup <- worldcup %>% mutate(playername = rownames(worldcup))
worldcup
worldcup2 <- worldcup %>% groupby(Position)%>%mutate(mean(Shots))%>%ungroup()
worldcup2 <- worldcup %>% group_by(Position)%>%mutate(avg_shots = mean(Shots))%>%ungroup()
worldcup2
worldcup2 <- worldcup2 %>% rename(playername = player_name)
worldcup2 <- worldcup2 %>% rename(player_name = playername)
worldcup2 %<% slice(1:3)
worldcup2 %>% slice(1:3)
data("VADeaths")
head(VADeaths)
VADeaths %>% mutate(age = rownames(VADeaths))
VADeaths %>% tbl_df() %>% mutate(age = rownames(VADeaths))
VADeaths <- VADeaths %>% tbl_df() %>% mutate(age = rownames(VADeaths))
VADeaths
VADeaths <- VADeathes %<% gather(key=key, value=death_rate, -age)
VADeaths <- VADeathes %>% gather(key=key, value=death_rate, -age)
VADeaths <- VADeaths %>% gather(key=key, value=death_rate, -age)
VADeaths
VADeaths <- VADeaths %>% separate(key, c("urban","gender"),sep=" ")
VADeaths
VADeaths <- VADeaths %>% mutate(age = factor(age), urban = factor(urban), gender = factor(gender))
VADeaths
head(worldcup)
worldcup %>%
select(Position, Time, Shots, Tackles, Saves) %>%
gather(Type, Number, -Position, -Time) %>%
ggplot(aes(x = Time, y = Number))
worldcup %>%
select(Position, Time, Shots, Tackles, Saves) %>%
gather(Type, Number, -Position, -Time) %>%
ggplot(aes(x = Time, y = Number)) +
geom_point()
worldcup %>%
select(Position, Time, Shots, Tackles, Saves) %>%
gather(Type, Number, -Position, -Time) %>%
ggplot(aes(x = Time, y = Number)) +
geom_point() +
facet_grid(Type ~ Position)
library(knitr)
wc_table <- worldcup %>% filter(Team %in% c("Spain", "Netherlands", "Uruguay", "Germany")) %>% select(Team, Position, Passes) %>% group_by("Team","Position") %>% summarize(ave_passes = mean(Passes),min_passes = min(Passes),max_passes = max(Passes),pass_summary = paste0(round(ave_passes), " (",min_passes, ", ",max_passes, ")")) %>%select(Team, Position, pass_summary)
head(worldcup)
wc_table <- worldcup %>% filter(Team %in% c("Spain", "Netherlands", "Uruguay", "Germany")) %>% select(Team, Position, Passes) %>% group_by(Team,Position) %>% summarize(ave_passes = mean(Passes),min_passes = min(Passes),max_passes = max(Passes),pass_summary = paste0(round(ave_passes), " (",min_passes, ", ",max_passes, ")")) %>%select(Team, Position, pass_summary)
wc_table
wc_table %>%
spread(Position, pass_summary) %>%
kable()
library(lubridate)
ymd("2006-03-12")
ext_tracks
andrew_tracks <- ext_tracks %>% filter(storm_name == "ANDREW" & year == 1992) %>% select(year, month, day, hour, max_wind, min_pressure) %>% unite(datetime, year, month, day, hour) %>% mutate(datetime= ymd_h(datetime))
andrew_tracks
andrew_tracks %>%
gather(measure, value, -datetime) %>%
ggplot(aes(x = datetime, y = value)) +
geom_point() + geom_line() +
facet_wrap(~ measure, ncol = 1, scales = "free_y")
andrew_tracks %>%
gather(measure, value, -datetime) %>%
ggplot(aes(x = datetime, y = value)) +
geom_point() + geom_line()
andrew_tracks %>%
ggplot(aes(x = datetime, y = max_wind)) +
geom_point() + geom_line()
andrew_tracks %>%
ggplot(aes(x = datetime, y = min_pressure)) +
geom_point() + geom_line()
#gather and facet_wrap are confusing
andrew_tracks %>% select(datetime) %>% mutate(year=year(datetime), month = months(datetime), weekday = weekdays(datetime),yday = yday(datetime),hour = hour(datetime))
check_tracks <- ext_tracks %>%
select(month, day, hour, year, max_wind) %>%
unite(datetime, year, month, day, hour) %>%
mutate(datetime = ymd_h(datetime),
weekday = weekdays(datetime),
weekday = factor(weekday, levels = c("Sunday", "Monday",
"Tuesday", "Wednesday",
"Thursday", "Friday",
"Saturday")),
month = months(datetime),
month = factor(month, levels = c("April", "May", "June",
"July", "August", "September",
"October", "November",
"December", "January")))
check_tracks
check_tracks <- ext_tracks %>%
select(month, day, hour, year, max_wind) %>%
unite(datetime, year, month, day, hour) %>%
mutate(datetime = ymd_h(datetime),
weekday = weekdays(datetime),
month = months(datetime)))
check_tracks <- ext_tracks %>%
select(month, day, hour, year, max_wind) %>%
unite(datetime, year, month, day, hour) %>%
mutate(datetime = ymd_h(datetime),
weekday = weekdays(datetime),
month = months(datetime))
check_tracks
check_tracks <- ext_tracks %>%
select(month, day, hour, year, max_wind) %>%
unite(datetime, year, month, day, hour) %>%
mutate(datetime = ymd_h(datetime),
weekday = weekdays(datetime),
weekday = factor(weekday, levels = c("Sunday", "Monday",
"Tuesday", "Wednesday",
"Thursday", "Friday",
"Saturday")),
month = months(datetime),
month = factor(month, levels = c("April", "May", "June",
"July", "August", "September",
"October", "November",
"December", "January")))
check_weekdays <- check_tracks %>% group_by(weekday) %>% summarize(avg_max_wind = mean(max_wind)) %>%rename(grouping = weekday)
check_weekdays
check_months <- check_tracks %>% group_by(month) %>% summarize(avg_max_wind = mean(max_wind)) %>%rename(grouping = month)
check_months
ggplot(check_weekdays, aes(x = grouping, y = ave_max_wind))
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))+
geom_bar
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))+
geom_bar()
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))+geom_bar(stat = "identity") + xlab("")
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))+geom_bar(stat = "") + xlab("")
ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind))+geom_bar(stat = "identity") + xlab("")
a <- ggplot(check_weekdays, aes(x = grouping, y = ave_max_wind)) +
geom_bar(stat = "identity") + xlab("")
b <- a %+% check_months
library(gridExtra)
grid.arrange(a, b, ncol = 1)
a <- ggplot(check_weekdays, aes(x = grouping, y = avg_max_wind)) +
geom_bar(stat = "identity") + xlab("")
b <- a %+% check_months
library(gridExtra)
grid.arrange(a, b, ncol = 1)
#The identity statistic leaves the data unchanged.
andrew_tracks2 <- ext_tracks %>%
filter(storm_name == "ANDREW") %>% select(year, month, day, hour, latitude, longitude) %>% unite(datetime,year, month, day, hour) %>% mutate(datetime = ymd_h(datetime),date = format(datetime, "%b %d"))
library(ggmap)
andrew_tracks2
miami <- get_map("miami", zoom = 5)
?register_google
andrew_tracks_tz <- andrew_tracks2 %>% mutate(datetime = with_tz(datetime, tzone = "America/New_York"),date = format(datetime, "%b %d"))
andrew_tracks_tz
swirl()
library(swirl)
swirl()
1:20
quit()
library(swirl)
swirl()
swirl()
getwd()
ls()
x <-9
ls()
dir()
?list.files
args(list.files())
args(list.files)
swirl()
library(swirl)
swirl()
s
d
g
q
old.dir <- getwd()
testdir <-dir.create()
q
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
fil.info("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
file.path('folder1',"mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd()
setwd(old.dir)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(diviros =11, num = 5)
remainder(divisor  =11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(stdev,c(1.4, 3.6, 7.9, 8.8))
evaluate(stdev(),c(1.4, 3.6, 7.9, 8.8))
evaluate(sd(),c(1.4, 3.6, 7.9, 8.8))
git remote add origin https://github.com/jhjanicki/animated_line_R.git
git branch -M main
git push -u origin main
x <- matrix(1:6, 2, 3)
x
for(i in seq_len(nrow(x))){}
for(i in seq_len(nrow(x))){for(j in seq_len(ncol(x))){print(x[i, j])}}
setwd("~/Desktop/R")
num_download("filehash", "2016-07-20")
sprintf("http://cran-logs.rstudio.com/%s/%s.csv.gz","2016","2016-08-02")
file.path("data", basename("http://cran-logs.rstudio.com/2016/2016-08-02.csv.gz"))
download.file(src, dest, quiet = TRUE)
download.file(src, "data", quiet = TRUE)
download.file("http://cran-logs.rstudio.com/2016/2016-08-02.csv.gz", "data", quiet = TRUE)
setwd("~/Desktop/projects2020/otters")
library(tidyverse)
library(lubridate)
otters <- read_csv("Otters.csv")
otters
otters -> otters %>% select(Year, Seizure_Country, Seizure_Location, Dead, Live, Sum, Species, Species_Detail, Use, Use_detail)
otters -> otters %<% select(Year, Seizure_Country, Seizure_Location, Dead, Live, Sum, Species, Species_Detail, Use, Use_detail)
otters -< otters %>% select(Year, Seizure_Country, Seizure_Location, Dead, Live, Sum, Species, Species_Detail, Use, Use_detail)
otters <- otters %>% select(Year, Seizure_Country, Seizure_Location, Dead, Live, Sum, Species, Species_Detail, Use, Use_detail)
otters
otters_wide <- otters %>%pivot_wider(names_from = Species, values_from = Sum)
otters_wide
print(tters_wide, n = 100)
print(otters_wide, n = 100)
write.csv(otters_wide,"otters_wide.csv")
otters_wide <- otters %>% group_by(Species) %>% mutate(row = row_number()) %>%pivot_wider(names_from = Species, values_from = Sum) %>%select(-row)
otters_wide
write.csv(otters_wide,"otters_wide.csv")
